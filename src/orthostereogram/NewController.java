/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orthostereogram;

import ch.aplu.xboxcontroller.XboxControllerListener;
import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author Fred
 */
public class NewController extends javax.swing.JFrame implements XboxControllerListener {

    /**
     * Creates new form NewController
     */
    
    Image imgBR, imgRB ;
    static public int imgSize = 600 ; //only odd sizes are allowed for stereograms
    int numberOfScreens = 1 ;
    int screenHeight ;
    static JFrame currentFrame ;
    static GraphicsEnvironment graphicsEnv ;
    static GraphicsDevice[] screenDevices ; 
    static GraphicsDevice secondaryScreenDevice ;
    
    //Just to initiate ?
    SlideStereogramView slide ;
    ImageStereogramView image ;
    ClassicStereogramView classic ;
    
    public NewController(boolean xboxConnected) {
        setLayout(null);
        initComponents();
        jUnit.setText("\u0394");jUnit2.setText("\u0394");jUnit3.setText("\u0394");jUnit4.setText("\u0394");
        jUnit6.setText("\u0394");
        
        //image Lunettes 3D (inversées)
        imgRB = getToolkit().getImage(getClass().getResource("/Ressources/3d-BR.png"));
        imgBR = getToolkit().getImage(getClass().getResource("/Ressources/3d-RB.png"));
        if (OrthoStereogram.BR_glasses) jImg3D.setIcon(new ImageIcon(imgBR));
        else jImg3D.setIcon(new ImageIcon(imgRB));
        jImg3D.setText("");
        
        //Calibration
        jCalibrate.setText("<html><center>"+"Screen Size"+"<br>"+"Calibration"+"</center></html>");
        jCalibrate.setEnabled(false) ;
        jCalibrate.setToolTipText("pas opérationnel");
        
        //image xbox
        Image imgXBOX = getToolkit().getImage(getClass().getResource("/Ressources/xbox-icon64.png"));
        jImgXBOX.setIcon(new ImageIcon(imgXBOX)); jImgXBOX.setText("");
        jImgXBOX.setEnabled(xboxConnected);
        //Si on a la xbox
        if (xboxConnected)
            OrthoStereogram.xbox.addXboxControllerListener(this );
        
        //Divers
        setTitle ("StéréoVergences (F. Maillet - "+OrthoStereogram.VERSION+")") ;
        this.getContentPane().setBackground(Color.CYAN);
        this.setResizable(false);
        
        //Random jumps tootip
        jRandomJumps.setToolTipText("pas opérationnel");        
        
        //List of Screens ?
        try {
            graphicsEnv = GraphicsEnvironment.getLocalGraphicsEnvironment();
            screenDevices = graphicsEnv.getScreenDevices();
            numberOfScreens = screenDevices.length;
            jScreens.removeAllItems();
            for (int i=0; i<numberOfScreens; i++) {
                jScreens.addItem(screenDevices[i].getIDstring());
            }
        } catch (HeadlessException e) { }
        jScreens.setToolTipText("pas opérationnel");
        
        //Check for secondary screen ?
        GraphicsDevice primaryScreenDevice = graphicsEnv.getDefaultScreenDevice();
        for (GraphicsDevice screenDevice : screenDevices) {
            if (!primaryScreenDevice.equals(screenDevice)) {
                secondaryScreenDevice = screenDevice;
                break;
            }
        }
        if (secondaryScreenDevice == null) {
            secondaryScreenDevice = primaryScreenDevice;
        }
        //Check for setFullScreenMode
        if (!secondaryScreenDevice.isFullScreenSupported()) jScreens.setEnabled(false);
        
        //Hauteur en pixels de l'écran ?
        screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height ;
        //On affiche
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jStart_CD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMax = new javax.swing.JSpinner();
        jTimeOut = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jMin = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jInitial = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jWorkingDistance = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jUnit = new javax.swing.JLabel();
        jUnit2 = new javax.swing.JLabel();
        jUnit3 = new javax.swing.JLabel();
        jUnit4 = new javax.swing.JLabel();
        jImg3D = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jStepC = new javax.swing.JSpinner();
        jUnit5 = new javax.swing.JLabel();
        jImgXBOX = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jStart_C = new javax.swing.JButton();
        jStart_D = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jUnit6 = new javax.swing.JLabel();
        jStepD = new javax.swing.JSpinner();
        jStart_CD_alter = new javax.swing.JButton();
        jStart_CD_jump = new javax.swing.JButton();
        jStart_Slide = new javax.swing.JButton();
        jSliderTimeOut = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        jStart_Img = new javax.swing.JButton();
        jScreensLabel = new javax.swing.JLabel();
        jImageChoice = new javax.swing.JComboBox<>();
        jScreens = new javax.swing.JComboBox<>();
        jRandomJumps = new javax.swing.JRadioButton();
        jVerticality = new javax.swing.JComboBox<>();
        jCalibrate = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.cyan);
        setPreferredSize(new java.awt.Dimension(530, 650));

        jStart_CD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStart_CD.setText("C <-> D");
        jStart_CD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStart_CDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Max :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Time Out :");

        jMax.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jMax.setModel(new javax.swing.SpinnerNumberModel(20, 1, 60, 5));

        jTimeOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTimeOut.setModel(new javax.swing.SpinnerNumberModel(20, 0, 120, 5));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Min :");

        jMin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jMin.setModel(new javax.swing.SpinnerNumberModel(-4, -30, 60, 1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Initial value :");

        jInitial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jInitial.setModel(new javax.swing.SpinnerNumberModel(0, -30, 60, 1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Working distance :");

        jWorkingDistance.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jWorkingDistance.setModel(new javax.swing.SpinnerNumberModel(70, 20, 300, 10));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("(cm)");

        jUnit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jUnit.setText("\\u");

        jUnit2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jUnit2.setText("\\u");

        jUnit3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jUnit3.setText("\\u");

        jUnit4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jUnit4.setText("\\u");

        jImg3D.setText("image");
        jImg3D.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jImg3DMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Step (C) :");

        jStepC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStepC.setModel(new javax.swing.SpinnerNumberModel(2, 0, 30, 1));

        jUnit5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jUnit5.setText("seconds");

        jImgXBOX.setText("image");

        jStart_C.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStart_C.setText(" < C >");
        jStart_C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStart_CActionPerformed(evt);
            }
        });

        jStart_D.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStart_D.setText(" < D >");
        jStart_D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStart_DActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Step (D) :");

        jUnit6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jUnit6.setText("\\u");

        jStepD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStepD.setModel(new javax.swing.SpinnerNumberModel(0.5d, 0.0d, 30.0d, 0.25d));

        jStart_CD_alter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStart_CD_alter.setText("C <#> D");
        jStart_CD_alter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStart_CD_alterActionPerformed(evt);
            }
        });

        jStart_CD_jump.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStart_CD_jump.setText("C # D");
        jStart_CD_jump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStart_CD_jumpActionPerformed(evt);
            }
        });

        jStart_Slide.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStart_Slide.setText("Auto Slider");
        jStart_Slide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStart_SlideActionPerformed(evt);
            }
        });

        jSliderTimeOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jSliderTimeOut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "slow", "medium", "fast", "very fast" }));
        jSliderTimeOut.setSelectedIndex(2);

        jStart_Img.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jStart_Img.setText("Image");
        jStart_Img.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStart_ImgActionPerformed(evt);
            }
        });

        jScreensLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScreensLabel.setText("Screen :");

        jImageChoice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jImageChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3d-practise", "3dring", "polytope", "art_png", "spi", "teseract", "snakes" }));
        jImageChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImageChoiceActionPerformed(evt);
            }
        });

        jScreens.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScreens.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2" }));

        jRandomJumps.setBackground(java.awt.Color.cyan);
        jRandomJumps.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRandomJumps.setText("Random Jumps");
        jRandomJumps.setEnabled(false);

        jVerticality.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jVerticality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Verticality", "0.25", "0.50", "0.75", "1.00" }));

        jCalibrate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCalibrate.setText("Screen size Calibration");
        jCalibrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCalibrateActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Serveur internet");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator4);

        jMenuItem2.setText("Quit");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jWorkingDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScreensLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)
                                        .addComponent(jScreens, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCalibrate))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jStart_C)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jStart_D))
                                                    .addComponent(jStart_CD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(42, 42, 42)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jStart_CD_alter, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                                    .addComponent(jStart_CD_jump, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jSliderTimeOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jImageChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jStart_Slide, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                                    .addComponent(jStart_Img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(39, 39, 39)
                                                .addComponent(jRandomJumps))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(20, 20, 20)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(22, 22, 22)
                                                        .addComponent(jLabel5)))
                                                .addGap(35, 35, 35))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel4))
                                                .addGap(18, 18, 18)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jInitial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jStepC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTimeOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jUnit5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jUnit2)
                                                    .addComponent(jUnit4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel9))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jMax, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jUnit3))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(17, 17, 17)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jVerticality, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jStepD, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jUnit6))))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jUnit))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jImgXBOX, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(74, 74, 74)
                                        .addComponent(jImg3D, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 90, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jImg3D, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jImgXBOX, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jScreensLabel)
                            .addComponent(jScreens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jWorkingDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)))
                    .addComponent(jCalibrate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jUnit))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jUnit3)
                            .addComponent(jMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jUnit2)
                                    .addComponent(jLabel1))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jStepC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jUnit4)
                        .addComponent(jLabel9)
                        .addComponent(jUnit6)
                        .addComponent(jStepD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTimeOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jUnit5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jVerticality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jStart_CD)
                    .addComponent(jStart_CD_alter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jStart_CD_jump)
                    .addComponent(jStart_C)
                    .addComponent(jStart_D))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jStart_Slide)
                    .addComponent(jSliderTimeOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRandomJumps))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jImageChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStart_Img))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jStart_CDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStart_CDActionPerformed
        //Check for verticality
        int hd = jVerticality.getSelectedIndex() ;
        //Create JFrame
        classic = new ClassicStereogramView ((Integer) jInitial.getValue(), ClassicStereogramView.CONVERGENCE_UP, (Integer) jWorkingDistance.getValue()) ;
        //Select screen to display
        int sc = jScreens.getSelectedIndex() ;
        /*if (graphicsEnv.getDefaultScreenDevice() != screenDevices[sc])
            screenDevices[sc].setFullScreenWindow(stereo);*/
        secondaryScreenDevice.setFullScreenWindow(classic);
        //Adapt
        classic.setMode ((Integer) jStepC.getValue(), (double) jStepD.getValue(), (Integer) jMax.getValue(), (Integer) jMin.getValue(), (Integer) jTimeOut.getValue(), false, false, hd) ;
        //classic.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        classic.setAppearence () ;
        classic.repaint() ;
        //stereo.setVisible(true);
        currentFrame = classic ; //Necessary for imgScale
    }//GEN-LAST:event_jStart_CDActionPerformed

    private void jStart_CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStart_CActionPerformed
        //Check for verticality
        int hd = jVerticality.getSelectedIndex() ;
        //Create JFrame
        classic = new ClassicStereogramView ((Integer) jInitial.getValue(), OldClassicStereogramView.CONVERGENCE_UP, (Integer) jWorkingDistance.getValue()) ;
        //Select screen to display
        int sc = jScreens.getSelectedIndex() ;
        /*if (graphicsEnv.getDefaultScreenDevice() != screenDevices[sc])
            screenDevices[sc].setFullScreenWindow(stereo);*/
        secondaryScreenDevice.setFullScreenWindow(classic);
        //send parameters
        classic.setMode ((Integer) jStepC.getValue(), (double) jStepD.getValue(), (Integer) jMax.getValue(), 0, (Integer) jTimeOut.getValue(), false, false, hd) ;
        //classic.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        classic.setAppearence () ;
        classic.repaint () ;
        currentFrame = classic ; //Necessary for imgScale
    }//GEN-LAST:event_jStart_CActionPerformed

    private void jStart_DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStart_DActionPerformed
        //Check for verticality
        int hd = jVerticality.getSelectedIndex() ;
        //Create JFrame
        classic = new ClassicStereogramView ((Integer) jInitial.getValue(), OldClassicStereogramView.DIVERGENCE_UP, (Integer) jWorkingDistance.getValue()) ;
        //Select screen to display
        int sc = jScreens.getSelectedIndex() ;
        /*if (graphicsEnv.getDefaultScreenDevice() != screenDevices[sc])
            screenDevices[sc].setFullScreenWindow(stereo);*/
        secondaryScreenDevice.setFullScreenWindow(classic);
        //adapt
        //double step = (double) jStepD.getValue() ; step = - step ;
        classic.setMode ((Integer) jStepC.getValue(), (double) jStepD.getValue(), 0, (Integer) jMin.getValue(), (Integer) jTimeOut.getValue(), false, false, hd) ;
        //classic.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        classic.setAppearence () ;
        classic.repaint () ;
        currentFrame = classic ; //Necessary for imgScale
    }//GEN-LAST:event_jStart_DActionPerformed

    private void jStart_CD_alterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStart_CD_alterActionPerformed
        //Check for verticality
        int hd = jVerticality.getSelectedIndex() ;
        //Create JFrame
        classic = new ClassicStereogramView ((Integer) jInitial.getValue(), OldClassicStereogramView.CONVERGENCE_UP, (Integer) jWorkingDistance.getValue()) ;
        //Select screen to display
        int sc = jScreens.getSelectedIndex() ;
        /*if (graphicsEnv.getDefaultScreenDevice() != screenDevices[sc])
            screenDevices[sc].setFullScreenWindow(stereo);*/
        secondaryScreenDevice.setFullScreenWindow(classic);
        //adapt
        classic.setMode ((Integer) jStepC.getValue(), (double) jStepD.getValue(), (Integer) jMax.getValue(), (Integer) jMin.getValue(), (Integer) jTimeOut.getValue(), true, false, hd) ;
        //classic.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        classic.setAppearence () ;
        classic.repaint();
        currentFrame = classic ; //Necessary for imgScale
    }//GEN-LAST:event_jStart_CD_alterActionPerformed

    private void jStart_CD_jumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStart_CD_jumpActionPerformed
        //Check for verticality
        int hd = jVerticality.getSelectedIndex() ;
        //Create JFrame
        classic = new ClassicStereogramView ((Integer) jInitial.getValue(), OldClassicStereogramView.CONVERGENCE_UP, (Integer) jWorkingDistance.getValue()) ;
        //Select screen to display
        int sc = jScreens.getSelectedIndex() ;
        /*if (graphicsEnv.getDefaultScreenDevice() != screenDevices[sc])
            screenDevices[sc].setFullScreenWindow(stereo);*/
        secondaryScreenDevice.setFullScreenWindow(classic);
        //adapt
        classic.setMode ((Integer) jStepC.getValue(), (double) jStepD.getValue(), (Integer) jMax.getValue(), (Integer) jMin.getValue(), (Integer) jTimeOut.getValue(), false, true, hd) ;
        classic.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        classic.setAppearence () ;
        //stereo.setVisible(true);
        currentFrame = classic ; //Necessary for imgScale
    }//GEN-LAST:event_jStart_CD_jumpActionPerformed

    private void jImg3DMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jImg3DMouseClicked
        if (OrthoStereogram.BR_glasses) {
            OrthoStereogram.BR_glasses = false;
            jImg3D.setIcon(new ImageIcon(imgRB));
        }
        else {
            OrthoStereogram.BR_glasses = true;
            jImg3D.setIcon(new ImageIcon(imgBR));
        }
    }//GEN-LAST:event_jImg3DMouseClicked

    private void jStart_SlideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStart_SlideActionPerformed
        //Check for verticality
        int hd = jVerticality.getSelectedIndex() ;
        //Create JFrame
        slide = new SlideStereogramView (jSliderTimeOut.getSelectedIndex(), (Integer) jMin.getValue(), (Integer) jMax.getValue(), (Integer) jWorkingDistance.getValue(), (Integer) jInitial.getValue(), hd) ;
        //Select screen to display
        int sc = jScreens.getSelectedIndex() ;
        /*if (graphicsEnv.getDefaultScreenDevice() != screenDevices[sc])
            screenDevices[sc].setFullScreenWindow(slide);*/
        secondaryScreenDevice.setFullScreenWindow(slide);
        //Appearence
        //slide.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        
        //slide.setVisible(true);
        slide.repaint();
        //set after to avoid misplacement of panels
        slide.setAppearence () ;
        currentFrame = slide ; //Necessary for imgScale
    }//GEN-LAST:event_jStart_SlideActionPerformed

    private void jStart_ImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStart_ImgActionPerformed
        
        String file = (String) jImageChoice.getSelectedItem() + ".png" ;
        image = new ImageStereogramView (file, jSliderTimeOut.getSelectedIndex(), (Integer) jMin.getValue(), (Integer) jMax.getValue(), (Integer) jWorkingDistance.getValue()) ;
        //Select screen to display
        int sc = jScreens.getSelectedIndex() ;
        /*if (graphicsEnv.getDefaultScreenDevice() != screenDevices[sc])
            screenDevices[sc].setFullScreenWindow(image);*/
        secondaryScreenDevice.setFullScreenWindow(image);
        //Appearence
        //image.setVisible(true); //image.repaint();
        image.setAppearence () ;
        currentFrame = image ; //Necessary for imgScale
    }//GEN-LAST:event_jStart_ImgActionPerformed

    private void jImageChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImageChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jImageChoiceActionPerformed

    private void jCalibrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCalibrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCalibrateActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    static public boolean imgScale (double factor) {
        int tmp = (int) (imgSize * factor) ;
        //Only odd sizes
        if ( (tmp & 1) != 0 )  tmp--  ;
        //if too big or too small..
        if (tmp > currentFrame.getContentPane().getHeight() | tmp < 200) return false ;
        else {
            imgSize = tmp ;
            return true ;
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCalibrate;
    private javax.swing.JComboBox<String> jImageChoice;
    private javax.swing.JLabel jImg3D;
    private javax.swing.JLabel jImgXBOX;
    private javax.swing.JSpinner jInitial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jMax;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JSpinner jMin;
    private javax.swing.JRadioButton jRandomJumps;
    private javax.swing.JComboBox<String> jScreens;
    private javax.swing.JLabel jScreensLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JComboBox<String> jSliderTimeOut;
    private javax.swing.JButton jStart_C;
    private javax.swing.JButton jStart_CD;
    private javax.swing.JButton jStart_CD_alter;
    private javax.swing.JButton jStart_CD_jump;
    private javax.swing.JButton jStart_D;
    private javax.swing.JButton jStart_Img;
    private javax.swing.JButton jStart_Slide;
    private javax.swing.JSpinner jStepC;
    private javax.swing.JSpinner jStepD;
    private javax.swing.JSpinner jTimeOut;
    private javax.swing.JLabel jUnit;
    private javax.swing.JLabel jUnit2;
    private javax.swing.JLabel jUnit3;
    private javax.swing.JLabel jUnit4;
    private javax.swing.JLabel jUnit5;
    private javax.swing.JLabel jUnit6;
    private javax.swing.JComboBox<String> jVerticality;
    private javax.swing.JSpinner jWorkingDistance;
    // End of variables declaration//GEN-END:variables

    @Override
    public void buttonA(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void buttonB(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void buttonX(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void buttonY(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void back(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void start(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void leftShoulder(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void rightShoulder(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void leftThumb(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void rightThumb(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void dpad(int i, boolean bln) {
        
        /*if (bln)
            switch (i) {
            case 0:  currentFrame.dispatchEvent(new KeyEvent(this, KeyEvent.KEY_PRESSED, System.currentTimeMillis(), 0, KeyEvent.VK_UP, 'A'));
                    break;
            case 1: break ;
            case 2:  currentFrame.dispatchEvent(new KeyEvent(this, KeyEvent.KEY_PRESSED, System.currentTimeMillis(), 0, KeyEvent.VK_RIGHT, 'A'));
                     break;   
            case 3: break ;
            case 4:  currentFrame.dispatchEvent(new KeyEvent(this, KeyEvent.KEY_PRESSED, System.currentTimeMillis(), 0, KeyEvent.VK_DOWN, 'A'));
                     break;
            case 5: break ;
            case 6:  currentFrame.dispatchEvent(new KeyEvent(this, KeyEvent.KEY_PRESSED, System.currentTimeMillis(), 0, KeyEvent.VK_LEFT, 'A'));
                     break;
            default: break ;
            }*/
    }

    @Override
    public void leftTrigger(double d) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void rightTrigger(double d) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void leftThumbMagnitude(double d) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void leftThumbDirection(double d) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void rightThumbMagnitude(double d) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void rightThumbDirection(double d) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void isConnected(boolean bln) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
